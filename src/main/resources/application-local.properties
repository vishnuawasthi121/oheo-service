# h2 database props
#spring.datasource.driver-class-name=org.h2.Driver
#spring.datasource.url=jdbc:h2:mem:OHEO_DB;DB_CLOSE_DELAY=-1
#spring.datasource.username=sa
#spring.datasource.password=

# Local Database
spring.datasource.url=jdbc:postgresql://localhost:5432/oheo_db
spring.datasource.username=postgres
spring.datasource.password=root
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQL81Dialect
#By default, the data.sql script executes before Hibernate initialization. This aligns the script-based initialization with other database migration tools such as Flyway and Liquibase. As we're recreating the schema generated by Hibernate each time, we need to set an additional property:This modifies the default Spring Boot behavior and populates the data after the schema is generated by Hibernate. Furthermore, we can also use a schema.sql script to build upon the Hibernate-generated schema prior to the population with data.sql. However, this mixing of different schema-generation mechanisms is not recommended.
spring.jpa.defer-datasource-initialization=true

############## EMAIL API ###########
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=vishnu.awasthi.dev9@gmail.com
spring.mail.password=Secure*123
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

app.email.sender.username=vishnu.awasthi.dev9@gmail.com
mail.smtp.host=smtp.gmail.com
mail.smtp.socketFactory.port=465
mail.smtp.ssl.enable=true
mail.smtp.auth=true
mail.smtp.port=465
app.mail.password=ikpiehmcbsobpcen